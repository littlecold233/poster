{"version":3,"sources":["logo.svg","WechatIMG3403.png","App.js","reportWebVitals.js","index.js"],"names":["normFile","e","Array","isArray","fileList","App","React","useState","name","job","upload","values","setValues","imgUrl","setImgUrl","className","id","style","backgroundImage","img","onFinish","v","file","length","originFileObj","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","then","url","Item","label","rules","required","message","type","placeholder","valuePropName","getValueFromEvent","beforeUpload","icon","UploadOutlined","htmlType","onClick","html2canvas","document","querySelector","width","height","scale","canvas","link","createElement","download","href","toDataURL","click","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"8MAAe,I,yDCAA,MAA0B,0C,kCCSnCA,EAAW,SAACC,GAChB,OAAIC,MAAMC,QAAQF,GACTA,EAEFA,GAAKA,EAAEG,UAoFDC,MA1Ef,WAAgB,IAAD,EACeC,IAAMC,SAAS,CACzCC,KAAM,GACNC,IAAK,GACLC,OAAQ,KAJG,mBACNC,EADM,KACEC,EADF,OAMeN,IAAMC,SAAS,IAN9B,mBAMNM,EANM,KAMEC,EANF,KAOb,OACE,sBAAKC,UAAU,MAAf,UACE,qBAAKA,UAAU,aAAaC,GAAG,aAAaC,MAAO,CAAEC,gBAAiBC,GAAtE,SACE,sBAAKJ,UAAU,OAAf,UACGF,EAAS,qBAAKE,UAAU,MAAME,MAAO,CAACC,gBAAgB,OAAD,OAASL,EAAT,QAA0B,KAChF,sBAAKE,UAAU,OAAf,yBAAyBJ,EAAOH,KAAhC,kCACA,qBAAKO,UAAU,MAAf,SAAsBJ,EAAOF,WAGjC,eAAC,IAAD,CAAMM,UAAU,OAAOK,SAAU,SAAAC,GAvBtB,IAAAC,EAwBPV,EAAUS,GACNA,EAAEX,OAAOa,SAzBND,EA0BID,EAAEX,OAAO,GAAGc,cA1BR,IAAIC,SAAQ,SAACC,EAASC,GAC7C,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcR,GACrBM,EAAOG,OAAS,kBAAML,EAAQE,EAAOI,SACrCJ,EAAOK,QAAU,SAAAC,GAAK,OAAIP,EAAOO,QAsBaC,MAAM,SAAAC,GAAG,OAAItB,EAAUsB,OAHjE,UAOE,cAAC,IAAKC,KAAN,CAAWC,MAAM,2BAAO9B,KAAK,OAAO+B,MAAO,CAAC,CAC1CC,UAAU,EACVC,QAAS,uCACTC,KAAM,WAHR,SAKE,cAAC,IAAD,CAAOC,YAAY,+BAErB,cAAC,IAAKN,KAAN,CAAWC,MAAM,2BAAO9B,KAAK,MAAM+B,MAAO,CAAC,CACzCC,UAAU,EACVC,QAAS,uCACTC,KAAM,WAHR,SAKE,cAAC,IAAD,CAAQC,YAAY,+BAEtB,cAAC,IAAKN,KAAN,CAAWC,MAAM,2BAAO9B,KAAK,SAASoC,cAAc,WAAWC,kBAAmB7C,EAAUuC,MAAO,CAAC,CAClGC,UAAU,EACVE,KAAM,QACND,QAAS,yCAHX,SAKE,cAAC,IAAD,CACEK,aAAc,SAAAxB,GACZ,OAAO,GAFX,SAKE,cAAC,IAAD,CAAQyB,KAAM,cAACC,EAAA,EAAD,IAAd,iCAGJ,cAAC,IAAKX,KAAN,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAQK,KAAK,UAAUO,SAAS,SAAhC,sCACA,cAAC,IAAD,CAAQA,SAAS,SAASC,QAAS,WACjCC,IAAYC,SAASC,cAAc,eAAgB,CACjDC,MAAO,IACPC,OAAQ,IACRC,MAAO,IACNrB,MAAK,SAAAsB,GACN,IAAMC,EAAON,SAASO,cAAc,KACpCD,EAAKE,SAAWjD,EAAOH,KAAP,UAAiBG,EAAOH,KAAxB,QAAqC,+BACrDkD,EAAKG,KAAOJ,EAAOK,UAAU,aAC7BJ,EAAKK,YATT,sCChEGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB/B,MAAK,YAAkD,IAA/CgC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtB,SAASuB,eAAe,SAM1BX,M","file":"static/js/main.7581f0d5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/WechatIMG3403.527676e5.png\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport 'antd/dist/antd.css'\nimport {Form, Input ,Button, Space, Typography, Upload} from 'antd';\nimport img from './WechatIMG3403.png'\nimport { UploadOutlined } from '@ant-design/icons';\nimport html2canvas from 'html2canvas';\n\nconst normFile = (e) => {\n  if (Array.isArray(e)) {\n    return e;\n  }\n  return e && e.fileList;\n};\n\nconst toBase64 = file => new Promise((resolve, reject) => {\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n  reader.onload = () => resolve(reader.result);\n  reader.onerror = error => reject(error);\n});\n\nfunction App() {\n  const [values, setValues] = React.useState({\n    name: '',\n    job: '',\n    upload: [],\n  });\n  const [imgUrl, setImgUrl] = React.useState('');\n  return (\n    <div className=\"App\">\n      <div className=\"imgWrapper\" id=\"imgWrapper\" style={{ backgroundImage: img }}>\n        <div className=\"mask\">\n          {imgUrl ? <div className=\"img\" style={{backgroundImage: `url(${imgUrl})`}} /> : null}\n          <div className=\"name\">欢迎{values.name}加入云犀Team</div>\n          <div className=\"job\">{values.job}</div>\n        </div>\n      </div>\n      <Form className=\"form\" onFinish={v => {\n          setValues(v);\n          if (v.upload.length) {\n            toBase64(v.upload[0].originFileObj).then((url => setImgUrl(url)))\n          }\n        }\n      }>\n        <Form.Item label=\"员工名称\" name=\"name\" rules={[{\n          required: true,\n          message: '员工名称必填',\n          type: 'string'\n        }]}>\n          <Input placeholder=\"员工名称\" />\n        </Form.Item>\n        <Form.Item label=\"员工职位\" name=\"job\" rules={[{\n          required: true,\n          message: '员工职位必填',\n          type: 'string'\n        }]}>\n          <Input  placeholder=\"员工职位\" />\n        </Form.Item>\n        <Form.Item label=\"员工照片\" name=\"upload\" valuePropName=\"fileList\" getValueFromEvent={normFile} rules={[{\n          required: true,\n          type: 'array',\n          message: '员工照片必传'\n        }]}>\n          <Upload \n            beforeUpload={file => {\n              return false;\n            }}\n          >\n            <Button icon={<UploadOutlined />}>Click to Upload</Button>\n          </Upload>\n        </Form.Item>\n        <Form.Item>\n          <Space>\n            <Button type=\"primary\" htmlType=\"submit\">生成预览</Button>\n            <Button htmlType=\"button\" onClick={() => {\n              html2canvas(document.querySelector(\"#imgWrapper\"), {\n                width: 496,\n                height: 673,\n                scale: 3\n              }).then(canvas => {\n                const link = document.createElement('a');\n                link.download = values.name ? `${values.name}.png` : '入职海报.png';\n                link.href = canvas.toDataURL(\"image/png\")\n                link.click();\n              });\n            }}>\n              下载\n              </Button>\n          </Space>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}